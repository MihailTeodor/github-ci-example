# This workflow will build a Java profect with Maven
name: Java CI with Maven in Linux

on:
 push:
 pull_request:

jobs:
 build:
   runs-on: ubuntu-latest
   strategy:
     matrix:
       # test against several Java versions:
       include:
         - java: 8
           additional-maven-args: "-Pjacoco"
         - java: 11  
      
   name: Build with Java ${{ matrix.java }} on Linux
   steps:
   - uses: actions/checkout@v2
   - name: Set up JDK ${{ matrix.java }}
     uses : actions/setup-java@v1
     with:
      java-version: ${{ matrix.java }}
   - name: Cache Maven packages
     uses: actions/cache@v2
     with:
       path: ~/.m2
       key: ${{ runner.os }}-m2-jdk${{ matrix.java }}-${{ hashFiles('**/pom.xml', '**/*.yml') }}
       restore-keys: ${{ runner.os }}-m2-   
   - name: Build with Maven
     run: >
       mvn -f myproject/pom.xml 
       clean verify ${{ matrix.additional-maven-args }}
   - name: Generate JUnit Report
     run: > 
       mvn -f myproject/pom.xml
       surefire-report:report-only site:site -DgenerateReports=false
     if: ${{ failure() }}  
   - name: Archive JUnit Report
     uses: actions/upload-artifact@v2
     if: ${{ failure() }}
     with:
       name: surefire-report-jdk-${{ matrix.java }}
       path: '**/target/site'    